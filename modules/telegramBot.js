// telegramBot.js
const QRCode = require('qrcode');
const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');
const axios = require('axios');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º dotenv
require('dotenv').config();

// –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather –Ω–∞ Telegram
const token = process.env.BOT_TOKEN; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

// –°–æ–∑–¥–∞–π—Ç–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: true });

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É users.json
const usersFilePath = path.resolve(__dirname, '../base/users.json');

// –ß—Ç–µ–Ω–∏–µ –±–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function getUsers() {
  if (fs.existsSync(usersFilePath)) {
    return JSON.parse(fs.readFileSync(usersFilePath, 'utf-8'));
  }
  return {};
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞ —Å —Å—Å—ã–ª–∫–æ–π
function generateQRCode(link, filePath) {
  return new Promise((resolve, reject) => {
    QRCode.toFile(filePath, link, {
      width: 1000,  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 1000x1000
    }, (err) => {
      if (err) reject(err);
      else resolve();
    });
  });
}

// –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function saveUsers(users) {
  fs.writeFileSync(usersFilePath, JSON.stringify(users, null, 2), 'utf-8');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start(?: (\d+))?/, (msg, match) => {
  const chatId = msg.chat.id;
  const referrerId = match[1] ? parseInt(match[1], 10) : null;

  let users = getUsers();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
  if (!users[chatId]) {
    users[chatId] = {
      id: chatId,
      referrals: 0,
      bonus: 0,
      referral: 0,
    };
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID
  if (referrerId && referrerId !== chatId) {
    const currentUser = users[chatId];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ —Ä–µ—Ñ–µ—Ä–∞–ª
    if (!currentUser.referral) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (users[referrerId]) {
        currentUser.referral = referrerId;
        currentUser.bonus = 1;
        users[referrerId].referrals += 1;
        users[referrerId].bonus += 0.1;

        bot.sendMessage(chatId, `–í—ã —É–∫–∞–∑–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ ${referrerId}. –°–ø–∞—Å–∏–±–æ!`);
        bot.sendMessage(referrerId, `–£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${users[referrerId].referrals}`);
      } else {
        bot.sendMessage(chatId, `–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ ${referrerId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
      }
    } else {
      bot.sendMessage(chatId, `–í—ã —É–∂–µ —É–∫–∞–∑–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ ${currentUser.referral}.`);
    }
  }

  saveUsers(users);

  bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ${process.env.COMPANY_NAME}!

üìç –ê–¥—Ä–µ—Å: ${process.env.ADDRESS}
    
üìÖ –†–∞–±–æ—Ç–∞–µ–º –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö.
    
üíµ –û–±–º–µ–Ω —Ç–æ–ª—å–∫–æ –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ —Ä—É–±–ª–∏.
    
üíπ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ª—É—á—à–∏–π –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ USDT –∏ —Å–∞–º—ã–π –≤—ã–≥–æ–¥–Ω—ã–π –∫—É—Ä—Å –Ω–∞ –ø—Ä–æ–¥–∞–∂—É USDT –≤ –ú–æ—Å–∫–≤–µ.
    
ü§ë –ù–∏–∫–∞–∫–∏—Ö –∫–æ–º–∏—Å—Å–∏–π –Ω–∞ –ø–æ–∫—É–ø–∫—É –∏ –ø—Ä–æ–¥–∞–∂—É USDT.
    
–ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ USDT, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω".`, {
    reply_markup: {
      keyboard: [
        [{ text: "üí∏ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞" }], // –ö–Ω–æ–ø–∫–∞ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
        [
          { text: "‚ÑπÔ∏è –û –Ω–∞—Å" }, // –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ
          { text: "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞" } // –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ
        ],
        [
          { text: "üí± –ö—É—Ä—Å" }
        ]
      ],
      resize_keyboard: true, // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —ç–∫—Ä–∞–Ω
      one_time_keyboard: false // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å—Ç–∞—ë—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;
  let users = getUsers();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
  if (!users[chatId]) {
    users[chatId] = {
      id: chatId,
      referrals: 0,
      bonus: 0,
      referral: 0,
    };
    saveUsers(users);
  }

  if (text === "üí∏ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞") {
    const users = getUsers();
    const user = users[userId]; // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID

    if (user) {
      const referralCount = user.referrals || 0;
      const bonus = user.bonus || 0;
      const referralId = user.referral || "–ù–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∞";

      let skidka;

      if (bonus === 0) {
        skidka = 0; // –ï—Å–ª–∏ –±–æ–Ω—É—Å 0
      } else if (Number.isInteger(bonus)) {
        skidka = 0.3; // –ï—Å–ª–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
      } else {
        skidka = 0.1; // –ï—Å–ª–∏ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
      }

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
      const referralLink = process.env.BOT_URL + "?start=" + userId;

      // –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è QR-–∫–æ–¥–∞
      const qrFilePath = path.join(__dirname, 'qr-codes', `${userId}_referral_qr.png`);

      // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞
      generateQRCode(referralLink, qrFilePath)
        .then(() => {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
          bot.sendPhoto(userId, qrFilePath, {
            caption: `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:\n–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: *${referralCount}*\n–°–∫–∏–¥–∫–∞: *${skidka}*\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: \`${referralLink}\`\n\n–ó–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –ø–æ–ª—É—á–∞–µ—Ç–µ - 10 –∫–æ–ø–µ–µ–∫ —Å–∫–∏–¥–∫—É\n–ó–∞ –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ - 30 –∫–æ–ø–µ–µ–∫ —Å–∫–∏–¥–∫–∞.`,
            parse_mode: 'Markdown' // –ò—Å–ø–æ–ª—å–∑—É–µ–º MarkdownV2 –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          }).then(() => {
            // –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –µ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–Ω–∏–º–∞—Ç—å –º–µ—Å—Ç–æ
            fs.unlinkSync(qrFilePath);
          }).catch((error) => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error);
          });
        })
        .catch((error) => {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞:", error);
        });
    } else {
      bot.sendMessage(chatId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
  } else if (text === "‚ÑπÔ∏è –û –Ω–∞—Å") {
    bot.sendMessage(chatId, `ü§ñ –û –Ω–∞—Å

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã!

üí∞ –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –æ–±–º–µ–Ω–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –±–æ–ª–µ–µ 3—Ö –ª–µ—Ç.

üìÖ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è –≤–∞—Å 24/7.

üíµ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ —Ä—É–±–ª–∏.

üíπ –£ –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å USDT –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏ –ø–æ —Å–∞–º–æ–º—É –ª—É—á—à–µ–º—É –∫—É—Ä—Å—É –≤ –ú–æ—Å–∫–≤–µ.  

–ù–∞—à –∞–¥—Ä–µ—Å: ${process.env.ADDRESS}

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å –∏ –ø–æ–∫—É–ø–∫–∏ USDT, –≤–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ`);
  } else if (text === "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞") {
    bot.sendMessage(chatId, `–ù–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –Ω–∞ —Å–≤—è–∑–∏ 24/7 –∏ –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.

–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏ –Ω–∞–ø–∏—à–∏—Ç–µ - ${process.env.SUPPORT_ACCOUNT}

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å –∏ –ø–æ–∫—É–ø–∫–∏ USDT, –≤–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω"`);
  } else if (text === "üí± –ö—É—Ä—Å") {
    axios.get("https://mosca.moscow/api/v1/rate/", {
      headers: {
        "access-token": "pLKHNguNDKifklXVqV1N8XVTHXj_MdocKF6kJFdF8fOXkolyScLaI6zeX1ShxE3YqGT_bWcbxzIC7pg3QnYNKw"
      }
    })
      .then(response => {
        const data = response.data;
        console.log('API Response:', data); // –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

        if (data.buy && data.sell) {
          bot.sendMessage(chatId, `üí∏ *–ö—É—Ä—Å –æ–±–º–µ–Ω–∞* üí∏\n\nüîº –ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏: *${data.buy} ‚ÇΩ*\nüîΩ –ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏: *${data.sell} ‚ÇΩ*\n\nüí∞ –û–±–º–µ–Ω—è–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!`);
        } else {
          console.error("Sell course data not found!");
          bot.sendMessage(chatId, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å.");
        }
      })
      .catch(error => {
        console.error("Error fetching course:", error);
        bot.sendMessage(chatId, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫—É—Ä—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      });
  }
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–æ—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
module.exports = bot;
